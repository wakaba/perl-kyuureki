
package Kyuureki;
use strict;
use warnings;
our $VERSION = '1.0';
use Carp qw(croak);

our @EXPORT = qw(gregorian_to_kyuureki kyuureki_to_gregorian);

sub import ($;@) {
  my $from_class = shift;
  my ($to_class, $file, $line) = caller;
  no strict 'refs';
  for (@_ ? @_ : @{$from_class . '::EXPORT'}) {
    my $code = $from_class->can ($_)
        or croak qq{"$_" is not exported by the $from_class module at $file line $line};
    *{$to_class . '::' . $_} = $code;
  }
} # import

use constant MONTH_TO_OFFSET => [
          undef,
          0,
          31,
          59,
          90,
          120,
          151,
          181,
          212,
          243,
          273,
          304,
          334,
          365
        ]
;
use constant FIRST_GREGORIAN_DAY => "\x19,!\x17)\x1E1&\x1B.#\x18*\x202(\x1C/\x24\x1A,!\x16)\x1E1&\x1B-#\x18+\x1F2'\x1D/\x24\x19,!\x16)\x1E0&\x1B.\x22\x18+\x202'\x1D/%\x1A-\x22\x17*\x1F2&\x1C/\x24\x18+!4(\x1D0%\x1A-\x22\x17)\x1F2'\x1B.\x24\x19+\x203)\x1D0%\x1B,\x22\x17*\x1E1'\x1C.#\x19,\x203(\x1E0%\x1A-\x22\x17*\x1F1&\x1C/#\x18+!3(\x1D0%\x1A-\x22\x17)\x1F2&\x1B.\x24\x18+\x203(\x1D0%\x1A-\x22\x17*\x202(\x1C/\x24\x1A,!4)\x1E1&\x1B-#\x18+\x1F2'\x1D/\x24\x19,!4)\x1E0&\x1B.\x22\x18+\x202'\x1D/\x24\x19,!3)\x1E1%\x1B.#\x17*\x202'\x1C/\x24\x19,!4(\x1E1&\x1A-#\x18*\x1F2(\x1C/\x24\x1A+!4)\x1D0&\x1B-\x22\x18+\x1F2(\x1D0%\x1A-\x22\x17*\x201&\x1B.#\x19,!3(\x1D0\x24\x1A-#\x17*\x1F2&\x1B.\x24\x19+!3'\x1D0%\x1A-\x22\x18)\x1E1'\x1B.\x24\x19+\x203(\x1D0%\x1B-!4*\x1E1'\x1C.\x24\x19+\x203(\x1E0%\x1A.\x22\x16)\x1F1'\x1C/#\x18+\x202(\x1E1%\x1A-\x22\x16)\x1F2&\x1C/#\x18+\x203(\x1D0%\x19,\x22\x17)\x1F2'\x1B-#\x19+\x203)\x1D/%\x1A,\x22\x17*\x1E1&\x1B-#\x19,\x203(\x1D/\x24\x1B-\x22\x17*\x1F1&\x1B.#\x19,!2(\x1D0%\x1B-\x22\x16)\x1E1&\x1B.\x24\x18+\x203'\x1D/&\x1A-\x22\x17)\x1E1'\x1C/%\x1A+!3)\x1E1&\x1B-\x22\x17*\x1F2(\x1D/\x24\x19,\x203)\x1F1&\x1B-\x22\x17*\x201&\x1C/#\x19,!3)\x1E1%\x1A-#\x17*\x203'\x1C/\x24\x19,!4(\x1E0&\x1A-#\x18*\x1F2'\x1B.\x24\x1A,!4)\x1D0%\x1B-#\x18+\x1F1'\x1C.\x24\x19,!4)\x1F1&\x1C/#\x18+\x202(\x1D0%\x1A-\x224)\x1F2&\x1C/\x24\x18+\x203(\x1D0%\x19,!4)\x1F2'\x1B.#\x18*\x203)\x1D0%\x1A,!4*\x1E1&\x1B-#\x18+\x203(\x1D/\x24\x1A-!4*\x1F1&\x1B.#\x18+!2(\x1D/\x24\x19,\x22\x16)\x1E1&\x1C/%\x19,!4(\x1D0&\x1B.#\x18*\x1F2'\x1C/\x24\x1A+\x203)\x1D0&\x1B-\x225*\x1E1'\x1D/\x24\x19,\x203(\x1E0&\x1B.\x224*\x1F1'\x1C/#\x18+!3)\x1E1%\x1A-\x224*\x1F2'\x1C/\x24\x18+!4(\x1E0%\x1A-\x225*\x1F2'\x1B.#\x19+!4)\x1D0%\x1A,\x22\x18+\x1F2'\x1C.#\x19,\x203(\x1D/%\x1A-\x22\x17*\x1F1&\x1C/#\x19,!3(\x1D0%\x1A-#4)\x1F2&\x1C/\x24\x18+\x203'\x1D0&\x1A-\x22\x17)\x1E1'\x1C/\x24\x19+\x203(\x1D0%\x1B,!4*\x1E1'\x1C.#\x18+\x203(\x1E1&\x1B.\x225+\x202(\x1D/\x24\x19,\x223)\x1E1%\x1A-#\x18+\x203'\x1C/\x24\x19,\x224)\x1E1&\x1A-#\x18*\x202'\x1C/\x24\x1A,!4)\x1D0&\x1B-#\x18+\x1F2'\x1D/\x24\x1A-!3)\x1E0&\x1B.\x22\x17*\x1F1'\x1D0\x24\x19,!3(\x1E1&\x1B.#\x18+\x203(\x1D0&\x1A,\x225)\x1F2'\x1B.#\x19+\x203)\x1D0%\x1A,\x225*\x1F1'\x1C.#\x19,\x203(\x1D/\x24\x1A-\x224*\x1F1&\x1B.#\x19,!3(\x1D0\x24\x1A-\x224*\x1E1&\x1B.\x24\x18+\x203'\x1D0%\x1A-\x225)\x1E1'\x1B.\x24\x19+\x202(\x1D1&\x1C-\x225*\x1F2(\x1D/\x24\x19,\x203)\x1F1&\x1B.\x225*\x202'\x1D/#\x19,!3)\x1E1%\x1A-\x225*\x203'\x1C/\x24\x18+!4)\x1E1&\x1A-\x226*\x202'\x1B.\x24\x19,!4)\x1D0%\x1B-\x22\x18+\x1F2'\x1C.\x24\x19,!3(\x1E0%\x1B.\x225*\x1F1&\x1C/\x24\x19,!3(\x1D0%\x1B.#5*\x1F2&\x1C/\x24\x19+\x203(\x1D1&\x1A-\x225)\x1F2'\x1C/\x24\x19+\x203)\x1D0&\x1B,\x225*\x1F2'\x1C.#\x18+\x203)\x1E0%\x1A-!4*\x202'\x1C/#\x18+!\x15(\x1D0\x24\x19,\x22\x17*\x1F2'\x1C/\x24\x19,\x22\x17)\x1E0&\x1A.#\x19*\x1F2'\x1C/\x24\x1A,!\x16)\x1D0&\x1B-#\x18+\x1F2'\x1D/\x24\x1A-\x203)\x1E0&\x1B.\x22\x17*\x1F1'\x1D0\x24\x19,!3(\x1E1&\x1B.#\x17*\x1F2'\x1C/\x24\x18+!\x16(\x1E1&\x1A-\x22\x18*\x1F2(\x1C/\x24\x19,\x22\x17*\x1F1&\x1C-#\x19,\x203(\x1D/\x24\x1A-\x22\x17*\x1F1&\x1B.#\x19,!3(\x1D0\x24\x1A-\x22\x17)\x1E1&\x1B.\x24\x18+\x20\x15'\x1D0%\x1A-\x22\x17)\x1E1'\x1B.\x24\x19*\x202(\x1D0%\x1A,!\x16)\x1E1'\x1C.#\x18+\x1F2(\x1E0%\x1A-!\x16)\x1F2'\x1D/#\x19,!\x16)\x1E1%\x1A-#\x17*\x203'\x1C/\x24\x18,!\x17)\x1E0%\x1A-#\x18*\x1F2'\x1B.\x24\x1A,!\x16)\x1D0%\x1B-#\x18+\x1F2'\x1C.\x24\x19,!\x16(\x1E0%\x1B.\x22\x17*\x1F1&\x1C/\x24\x19,!3(\x1D1%\x1B.#\x17)\x1F2'\x1C/\x24\x18+\x20\x16(\x1D1&\x1A-\x22\x17)\x1F2'\x1C/\x24\x19+\x20\x16)\x1D0&\x1B,\x22\x17*\x1F2'\x1C.#\x18+\x20\x16)\x1E0%\x1A-!\x17*\x202'\x1C.#\x18+!\x16(\x1D0\x24\x1A-\x22\x17*\x1F2&\x1B.\x24\x18+!\x16(\x1D0%\x1A-\x22\x18*\x1E1'\x1B.\x24\x19+\x20\x15(\x1D";
use constant MONTH_TYPES => "U*U\x0A-\x15*+*\x15U*V\x0AU\x15*5*\x15V\x0AU\x15U\x1A*\x15-\x15j\x0AU\x1AU\x0A-\x15j**\x0DU\x0A-\x155\x15*-*\x15V\x0A5\x15U\x16*\x15V*Z\x0AU\x16U\x0A+\x15Z**\x0BU\x0A+\x15-\x15*\x0BU*U\x0A-\x15U\x15*\x15U*V\x0AU\x15*5*\x15V*j\x0AU\x1A*\x15+\x15j\x0AU\x1AU\x0A+\x15j**\x0DU*U\x0A5\x15*-*\x15U\x0A5\x15U\x16*5*\x15Z\x0AU\x16U\x0A+\x15Z**\x0BU\x0A+\x15-\x15*+*\x15U\x0A-\x15U\x15*\x15U*V\x0AU\x15U\x1A*\x15V*j\x0AU\x1A*\x15+\x15j\x0AU\x1AU\x0A+\x155\x15*\x0DU*U\x0A5\x15*-*\x15U*Z\x0AU\x16*5*\x15Z\x0AU\x16U\x1A*\x15Z**\x0BU\x1AU\x0A-\x15*+*\x0DU\x0A-\x15U\x15*-*\x15V\x0AU\x15U\x16*\x15V*j\x0AU\x1A*\x15+\x15j**\x0DU\x0A+\x155\x15*\x0DU*U\x0A5\x15U\x16*\x15U*Z\x0AU\x16*5*\x15Z\x0AU\x16U\x1A*\x15-\x15*\x0BU\x1AU\x0A-\x15*+*\x0DU*V\x0AU\x15*-*\x15V\x0AU\x15U\x16*\x15V*j\x0AU\x16U\x0A+\x15j**\x0BU\x0A+\x155\x15*+*\x15U\x0A5\x15U\x15*\x15U*Z\x0AU\x15*5*\x15Z**\x0BU\x1A*\x15-\x15*\x0BU\x1AU\x0A-\x15U\x15*\x0DU*V\x0AU\x15*-*\x15V\x0AU\x15U\x16*\x15+\x15j\x0AU\x16U\x0A+\x15j**\x0BU*U\x0A5\x15*+*\x15U\x0A5\x15U\x15*\x15U*Z\x0AU\x15U\x1A*\x15Z*j\x0AU\x1A*\x15-\x15j**\x0DU\x0A-\x155\x15*\x0DU2V\x0A5\x15*-*\x0D\x1A\x1B)\x1D\x12\x1B%:&\x1AV\x125%V\x15T\x0D)\x1BI\x1D\x12\x1D\x13\x0D+\x0AW\x12[\x12Z\x16T-T\x0EI.I\x16\x13\x15+*-\x0A-\x13j\x16*\x1B\x24\x17I6I\x19\x155\x16\x155\x0A-\x15U\x152\x1B\x22\x1B%\x1DJ\x1AK\x0A\x17\x15V*Z\x0AU\x15R-R\x0E%\x1BJ,K\x0C\x1B\x15-\x15j\x0AY\x16)\x17R\x16%6%\x16K4U\x14-\x15j*4\x0B)\x1B\x12;R\x0A'\x1A'\x1AV\x146%V\x15T\x0D)\x1DI\x1E\x12\x1D&\x1A+\x1AZ2j\x12Z\x15T-\x12\x17\x0D\x0E\x0B=\x12\x1D*\x0A[\x14k\x12j\x1A*\x17\x14\x1BE:J\x1A\x15\x15+).\x0A3\x0BU\x15R\x1D\x24;\x24\x1DJ\x1A\x159\x16\x15V\x0AU\x15Y\x15R-R\x0E%\x1EJ<J\x0A\x1B\x19Z*j\x06i\x16)\x17R\x16%6%\x1AM\x0C-%-\x15*\x0Bc\x16)\x1B\x11;\x12\x1B&\x1AU\x14W\x14V\x151+T\x0D\x19\x1DI\x1D\x11\x1D&\x1A+\x1AZ\x14Z%j\x16T\x0DI\x1DI\x0E\x13-\x13\x0D+\x0A[\x12-\x0Bj\x16T.\x24\x17I6I\x1A\x15\x15-*6\x0A5\x1D(\x1BR\x1B\x24\x1BI:J\x1A\x15-\x16\x155\x09-\x0DU\x0D)\x1B\x22;\x22\x1DF\x1A+\x1AV\x14V*Z\x1AT\x1DH-Q\x0E#\x0DK*K\x0A\x1B\x15-\x15j\x0AU\x16%\x17R\x16\x155\x15\x16K*U\x0A5\x15*\x0BS\x1B\x24\x1BJ:\x12\x1B\x15\x1AM2V\x0A5\x15U\x15T\x0D%\x1DE\x1D\x0A\x1D\x16\x1A+\x19Z\x12k\x0Aj\x16T.R\x0EE\x0E\x0B-\x13\x15+\x09[\x12-\x0Bj\x16*\x1B\x22\x17E6E\x1A\x15\x15-*6\x0A5\x0DU\x0DJ\x1B\x22;\x22\x1DJ\x1A\x16\x15\x17\x15V\x0A5\x15U\x15R\x0DS\x06'\x0DK*K\x0A\x1B\x15Z2j\x0Ae\x16)\x17R\x16%6%\x16M\x0C-\x15-\x15*\x0B)\x17)\x1B\x12;\x12\x1B%\x1AU4V\x125\x154+T\x0D)\x1DI\x0E\x13\x1D&\x1A+\x1AZ\x12V\x15j\x16T\x0EI\x1DI\x0E\x13-\x15\x16+\x0A[\x14-\x0Bj\x16T6\x24\x17I6J\x1A\x15\x15-*V\x0A5\x15*\x1BR\x1B\x24\x1BI:J\x1A\x16\x15+\x15V\x0AU\x15i\x15R\x0D%\x1D%\x0DK\x1CK\x0C+\x15Z*j\x0Ai\x16R.R\x16%\x16K,M\x0C-\x155\x15,\x0B)\x17)\x1B\x12\x1B%6%\x1AU4V\x125\x154+T\x0D)\x1D\x12;\x12\x1D&\x1AV4Z\x12V\x15j\x16T\x0EI\x1DI\x0E\x13\x0D'*+\x0Ak\x14-\x0Bj\x1AT6\x24\x17I\x16\x155\x15\x15-\x0A-\x155\x15*3R\x1B\x24\x1BJ:J\x1A\x16\x156*V\x0AU\x15U\x15R\x0D%\x1D%\x0DK\x0A\x17\x19+\x15Z\x0AU\x15i\x16R6R\x16%\x16K,M\x0C-\x15j*,\x0B)\x17)\x1B\x12\x1B%:&\x1AM\x14-%V\x154\x0B)\x1BI\x1D\x12\x1D\x13\x1D&\x1AV\x14[\x14Z\x06U\x0DU\x0EI\x0E\x13\x1D\x13\x0D+*+\x0Ak\x14Z*j\x1Ad\x16I.I\x16\x155\x15\x15-\x0A-\x155\x15*\x1B\x247\x24\x1DJ\x1A\x155\x16\x15V*Z\x0AU\x15R+R\x0D%\x1DJ\x1CK\x0C\x17\x19+\x15Z\x0AU\x16i\x16R\x0E%.%\x16K,U\x14-\x05k\x0A5\x0B)\x17R6\x12\x1B%\x1AM4V\x14-)V\x055\x0D)\x1BI\x1D\x12\x1D&:*\x1AV\x14[\x14Z\x06U\x15U\x0EI\x0E\x13\x1D\x13\x0D+\x0A[\x14+\x15j2*\x1Bd\x16I.I\x1A\x15\x15+*M\x0A-\x155\x15*\x0B%\x1B%\x1DJ\x1A\x155\x16\x15V\x0A5\x15U\x15R5R\x0D%\x1DJ\x1C\x0B\x0D'\x19V*Z\x0AY\x15i\x16R\x0E%.E\x16K\x0C+)-\x09k\x0Aj\x16)\x17\x127\x22\x1BE\x1AM4V\x14-\x09-\x0BU\x0D)\x1B\x12;\x22\x1D&:*\x1AV\x146)Z\x06U\x0DI\x1DI\x0E\x135\x15\x0D+\x0A[\x14+\x15j\x0AU\x16%\x17I\x0E\x155\x15\x15+*M\x0A-\x15j*2\x0B%\x1BJ:J\x1A\x15:&\x19V\x0A5\x16U\x15R\x0D%\x1D%\x1D\x0A\x1D\x0B\x0D+\x19V2j\x0AZ\x16R-R\x0EE\x0E\x0B-\x0B\x0D+1-\x09k\x0Aj\x16*\x17\x12\x17E6E\x1A\x15\x15-)5\x09-\x13U\x0D*\x1B\x22;\x22\x1DF\x1A\x155V\x14V2Z\x0AU\x0DJ\x1DQ\x0E#\x1DJ\x1AK\x0A\x1B\x15-\x15j\x0AU\x16%\x17Q\x0E%5\x15\x16K\x0A+\x15-\x15j22\x0B)\x1BJ:\x0A\x1B\x15\x1AM2V\x0A5\x15U\x15T\x0D)5E\x1D\x0A\x1D&\x1A+\x19V\x12V\x15j\x16T1U\x0EE\x0E\x0B-\x13\x0D+\x0A[\x12-\x0Bj\x16T6\x22\x17E6E\x1A\x15\x15-*5\x095\x0D*\x1B*\x1B\x223%\x1DJ\x1A\x156\x16\x15V\x0A5\x15U\x0DR\x0D#\x1D%\x1DJ\x1AK\x0A\x1B\x15Z*j\x0Ae\x16R.R\x0E%6%\x16K\x0C+\x16-\x15*\x0Bi\x16)\x1BR\x1A%6%\x1AM4V\x125\x154+T\x0D)\x1D\x12;\x12\x1D&2-\x1AV\x12V\x16j\x16T\x0DI\x1DI\x0E\x13\x0D+*+\x0A[\x12-\x0Bj\x16T6\x24\x17E\x16\x135\x15\x15-2V\x0A5\x15*.J\x1B\x24\x1BI:J\x1A\x16\x15-*V\x0A5\x15U\x15R\x0D%\x1D%\x1DJ\x1A\x16\x15+\x15Z2j\x0Ai\x16R.R\x0E%\x16K,M\x0C+\x15j**\x0B)\x17)\x1B\x12\x1B%6%\x1AU\x14-%5\x154+T\x0D)\x1D\x12\x1D\x13\x1D&\x1AV4Z\x12V\x15T-T\x0EI5I\x0E\x13\x0D+*+\x0A[\x14Z\x16j\x16T2%\x17I\x16\x135\x15\x15-\x0A-\x155\x15*\x1B\x247\x24\x1BI:J\x1A\x16\x15.*V\x0AU\x15*+R\x0D%5%\x1DJ\x0C\x17\x19+\x15:\x0AU\x15i\x16R\x0E%-%\x16K4M\x0C-\x15j*,\x0B)\x17R6\x12\x1B%6%\x1AU\x14-%5\x154\x0B)\x1BI\x1D\x12\x1D%:&\x1AV\x14[\x14V\x05U-T\x0EI\x1D\x12\x1D\x13\x0D+*+\x0Ak\x14Z*j\x1Ad\x16I.I\x16\x15\x15+*-\x0A-\x155\x15*\x1B\x247\x24\x1BJ\x1A\x155\x16\x15V*V\x0AU\x152+R\x0D%\x1DJ\x1AK\x0C\x17\x19V*Z\x0AU\x15i\x16R\x0E%-%\x16K\x0C+\x19-\x05k*4\x0B)\x17R6\x12\x1B%\x1AM4U\x14-\x09-\x0B5\x0B)3I\x1D\x12\x1D%:*\x1AV\x146)Z\x06U-T\x0EI\x1E\x12\x1D\x13\x0D+\x0AW\x14+\x15Z\x0AU5d\x16I.I\x16\x15\x15+*-\x0A-\x15j**\x0B%\x17I6J\x1A\x155\x16\x15V\x0A5\x15U\x15R\x0B%\x1B%\x1DJ\x1CK\x0C'\x19V*Z\x0AU\x15R-R\x0E%.E\x16K\x0C+)-\x09k\x0Aj\x16)\x17R\x16E6E\x1AM4U\x14-\x09-\x0B5\x0D)\x1B\x12;\x22\x1D&:*\x1AV\x146)Z\x06U\x0DI\x1DI\x0E\x13\x1D*\x1A+\x0AW\x14+\x15j\x0AU6d\x16I\x0E\x13-\x15\x15+*M\x0A-\x15j*2\x0B%\x17J6J\x1A\x15\x16M*V\x0A5\x15U\x15R\x0D%\x1B%\x1D\x0A\x1D\x16\x1A'\x19V2Z\x0AY\x15R-R\x0EE\x0E\x0B-\x0B\x0D+\x09[\x12k\x0Aj\x16*\x17\x12\x17E6E\x1A\x15\x15-)-\x09-\x0BU\x0D*\x1B\x22;\x22\x1DF\x1A\x155V\x14Z\x0AU\x15i\x16R\x0E%\x1D%\x16K,M\x14+\x09[\x0A-\x0Bi\x16R6\x12\x1B%:%\x1AU\x14-)6\x055\x0B)\x1BI\x1D\x12\x1D%:&\x1AV\x14W\x14V\x05U-T\x0DI\x1D\x12\x1D\x13\x0D+*+\x0A[\x14Z*j\x0Ae\x16I.I\x16\x15\x15+*-\x0A-\x155\x15*\x0B%\x17%\x1BJ\x1A\x155\x16\x19.*V\x0A5\x152+R\x0D%\x1DJ<J\x0C\x17\x19+\x19Z\x0AV\x15i\x16R\x0E%-%\x16K\x0C\x1B)+\x09k\x0A-\x0B)\x17R6\x12\x1B%\x1AK4U\x14-)6\x055\x0B*\x1BI\x1D\x12\x1D%:*\x1AV\x146)V\x0AU\x0DU\x0EI\x0E\x13\x1D\x13\x0D+\x0AW\x14+\x15Z\x0AU\x15e\x16J.I\x16\x15\x15+*-\x0A-\x15j**\x0B%\x17%\x1BJ\x1A\x15:\x16\x19N\x12-\x15U\x15R\x0B%\x1B%\x1D\x0A\x1D\x0B\x0D\x17\x19V\x12[\x0AZ\x15T-R\x0EE.E\x16\x0B\x15+)-\x09k\x12j\x16*\x17R\x16E6E\x1A\x135U\x14-\x09-\x135\x0D*\x1B\x14;\x22\x1DE:J\x1A\x16\x156*Z\x0AU\x15J-R\x0E#\x1DJ\x1AK\x0A\x17\x15+\x15Z\x0AU\x15e\x16R\x0E%-%\x15K\x0A\x1B\x15-\x15j*2\x0B)\x17R6\x12\x1B%\x1AM4V\x12-\x15V\x15T\x0B)\x1BE\x1D\x0A\x1D&\x1A'\x1AV\x12[\x12Z\x15T-T\x0EE\x0E\x0B-\x13\x15+\x0A[\x12k\x12j\x16*\x17\x14\x17E6E\x1A\x15\x15+*-\x0A-\x155\x0D*\x1B\x24;\x24\x1DJ\x1A\x155\x16\x156\x0A5\x15U\x15R-R\x0E%\x1DJ\x1AK\x0A\x17\x15V*Z\x0AU\x16R-R\x0E%.%\x16K\x14\x1B%-\x15j\x0Ai\x16)\x17R6\x12\x1B%\x1AM4V\x125\x05-+T\x0D)\x1B\x12;\x12\x1D&\x1A'\x0AW\x146%Z\x15T\x0D)\x1DI\x0E\x13-\x13\x15+\x0A[\x14m\x12j\x16T6\x24\x17I\x16\x135\x15\x15+*-\x0A-\x15j*2\x1B\x24\x1BI:J\x1A\x155\x16\x15V\x0A5\x15U\x15R\x0D%\x1D%\x1DJ\x1C\x16\x19\x1B\x15V*j\x0AY\x16R.R\x0E%\x0EK,K\x14+%-\x05k\x0Ai\x16)\x1B\x12\x1B%6%\x1AM4V\x146\x05-+T\x0D)\x1B\x12;\x12\x1D&\x1AV\x14W\x146%Z\x16T\x0DI\x1DI\x0E\x13\x0D'*+\x0A[\x14Z*j\x06U6\x24\x17I\x16\x135\x15\x15-\x0A]\x14-\x15*+R\x0B%\x1BJ:J\x1A\x15\x15-*V\x0A5\x15*+R\x0D%\x1D%\x1DJ\x1C\x16\x19\x1B\x19Z\x0AU\x15i\x16R.R\x0E%\x16K,K\x14+\x09[\x0Am\x0Ai\x16R6\x12\x1B%:%\x1AM\x14-)6\x055\x0B)\x1B)\x1D\x12;\x12\x1D&\x1AV\x14W\x14V\x095\x0DU\x0DI\x1D\x12\x1D\x13\x0D+*+\x0A[\x14Z*j\x0AU\x16I.I\x16\x135\x15\x15-\x0A-\x155\x15*\x0B%\x17%\x1BJ\x1A\x155\x15\x19.*V\x0A5\x152+R\x0D%\x1DJ<J\x0C\x17\x19+\x19Z\x0AU\x15i\x16R\x0E%\x1D%\x16K\x0C\x17)+\x09";
use constant
use constant MIN_YEAR => 445;
use constant MAX_YEAR => 2100;

sub gregorian_to_kyuureki ($$$) {
  my ($y, $m, $d) = @_;
  return (undef, undef, undef, undef)
      if $y < MIN_YEAR or MAX_YEAR + 1 < $y or ($y == MAX_YEAR + 1 and $m > 2);

  my $day = $d + MONTH_TO_OFFSET->[$m];
  my $is_leap_year = (($y % 4) == 0 and
                      not (($y % 100 == 0) and not ($y % 400 == 0)));
  $day++ if $is_leap_year and $m > 2;

  my $offset = MIN_YEAR;
  my $first_day = unpack 'C', substr FIRST_GREGORIAN_DAY,
      $y - $offset, 1;

  if ($day < $first_day) {
    $y--;
    $day += 365;
    $is_leap_year = (($y % 4) == 0 and
                     not (($y % 100 == 0) and not ($y % 400 == 0)));
    $day++ if $is_leap_year;
    $first_day = unpack 'C', substr FIRST_GREGORIAN_DAY,
        $y - $offset, 1;
  }
  $day -= $first_day - 1;

  my $mt = substr MONTH_TYPES,
      2*($y - $offset), 2;
  $mt = (unpack 'b7', (substr $mt, 0, 1)).(unpack 'b7', (substr $mt, 1, 1));

  my $leap_month = hex substr LEAP_MONTH,
      $y - $offset, 1;

  my $month = 1;
  {
    my $days = (substr $mt, $month-1, 1) ? 30 : 29;
    if ($day <= $days) {
      last;
    } else {
      $day -= $days;
      $month++;
    }
    redo;
  }
  if (not $leap_month) {
    return ($y, $month, 0, $day);
  } elsif ($month == $leap_month + 1) {
    return ($y, $month-1, 1, $day);
  } elsif ($leap_month < $month) {
    return ($y, $month-1, 0, $day);
  } else {
    return ($y, $month, 0, $day);
  }
} # gregorian_to_kyuureki

sub kyuureki_to_gregorian ($$$$) {
  my ($y, $m, $l, $d) = @_;
  return (undef, undef, undef)
      if $y < MIN_YEAR or
         MAX_YEAR < $y;

  my $offset = MIN_YEAR;
  my $first_day = unpack 'C', substr FIRST_GREGORIAN_DAY,
      $y - $offset, 1;
  my $leap_month = hex substr LEAP_MONTH,
      $y - $offset, 1;
  my $mt = substr MONTH_TYPES,
      2*($y - $offset), 2;
  $mt = (unpack 'b7', (substr $mt, 0, 1)).(unpack 'b7', (substr $mt, 1, 1));

  $m++ if $leap_month and $leap_month < $m;
  $m++ if $l;

  $d += 29 + $_ for split //, substr $mt, 0, $m-1;
  $d += $first_day - 1;

  my $is_leap_year = (($y % 4) == 0 and
                      not (($y % 100 == 0) and not ($y % 400 == 0))) ? 1 : 0;
  if (MONTH_TO_OFFSET->[13] + $is_leap_year < $d) {
    $d -= MONTH_TO_OFFSET->[13] + $is_leap_year;
    if ($d > 31) {
      return ($y+1, 2, $d-31);
    } else {
      return ($y+1, 1, $d);
    }
  }

  for (reverse 3..12) {
    if (MONTH_TO_OFFSET->[$_] + $is_leap_year < $d) {
      return ($y, $_, $d - MONTH_TO_OFFSET->[$_] - $is_leap_year);
    }
  }
  for (2, 1) {
    if (MONTH_TO_OFFSET->[$_] < $d) {
      return ($y, $_, $d - MONTH_TO_OFFSET->[$_]);
    }
  }

  return (undef, undef, undef);
} # kyuureki_to_gregorian

1;

## License: Public Domain.
